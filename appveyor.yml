version: '#{build}'
image: Visual Studio 2017

configuration: Release

environment:
  OPENCOVER_VER: 4.6.519
  COVERALLS_NET_VER: 0.412
  COVERAGE_FILTER: +[MiraclAuthentication]* -[MiraclAuthenticationTests]* -[SampleWebApp]*
  COVERAGE_DIR: .\coverage
  OPENCOVER_EXE: '%COVERAGE_DIR%\OpenCover.%OPENCOVER_VER%\tools\OpenCover.Console.exe'
  COVERALLS_NET_EXE: '%COVERAGE_DIR%\coveralls.net.%COVERALLS_NET_VER%\tools\csmacnz.Coveralls.exe'
  COVERALLS_REPO_TOKEN:
    secure: 6ZniuqiyfgAu9t4yXHrh533pRBWUMIbM+vl/SsOXndf4DdHERXMFB+4n4LQVqdHm
  MFA_CLIENT_ID:
    secure: Q4scL0xm0Gcz2l0eLnAmug==
  MFA_CLIENT_SECRET:
    secure: nwFdZ9Ms3W3V8IwZoc+jwR7BAxWoqWoEoT9+a4pVA5up5at+UrAxAzaB0/WTqcCd

init:
  - rmdir C:\cygwin /s /q
  - rmdir C:\QT /s /q

install:
  - cmd: |
      nuget install OpenCover -Version %OPENCOVER_VER% -OutputDirectory %COVERAGE_DIR%
      nuget install coveralls.net -Version %COVERALLS_NET_VER% -OutputDirectory %COVERAGE_DIR%

before_build:
  - cmd: nuget restore Authentication.sln -Verbosity quiet

build_script:
  cmd: msbuild /m /verbosity:minimal Authentication.sln /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

test_script:
  - cmd: |
      %OPENCOVER_EXE% -target:nunit3-console.exe -targetargs:".\MiraclAuthenticationTests\bin\Release\MiraclAuthenticationTests.dll" -filter:"%COVERAGE_FILTER%" -register:user -returntargetcode -output:%COVERAGE_DIR%\coverage.xml
      %COVERALLS_NET_EXE% --opencover -i %COVERAGE_DIR%\coverage.xml --serviceName appveyor --useRelativePaths --jobId %APPVEYOR_BUILD_NUMBER%
  # - ps: |
  #     git clone -q https://github.com/miracl/maas-sdk-integration.git
  #     docker build -f demo/Dockerfile -t demo .
  #     docker build -f maas-sdk-integration/Dockerfile.windows -t test-suite ./maas-sdk-integration
  #     docker-compose -f maas-sdk-integration/docker-compose-windows.yml up -d 2>$null
  #     echo "Running integration tests..."
  #     $demoURL = "http://$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' maas-sdk-dotnet_demo):8000"
  #     docker run --rm -it --network nat test-suite -c "go run cmd/wait-for/main.go -addr $demoURL/config"
  #     docker run --rm -it --network nat test-suite -c "go test -tags 'ignoredefaultcurves BN254CX' -v -addr $demoURL -mfa-api https://api.mpin.io -client-secret $env:MFA_CLIENT_SECRET"
